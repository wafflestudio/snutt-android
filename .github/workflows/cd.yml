name: CD

on:
  push:
    branches:
      - 'develop'
    paths:
      - 'app/version.properties'

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Clean build
        run: ./gradlew clean
      - name: Setup google-services.json
        run: |
          mkdir -p ./app/src/staging
          cat << EOF > ./app/src/staging/google-services.json
          ${{ secrets.google_services_json }}
          EOF
      - name: Setup secrets.xml
        run: |
          mkdir -p ./app/src/staging/res/values
          cat << EOF > ./app/src/staging/res/values/secrets.xml
          ${{ secrets.secrets_xml }}
          EOF
      - name: Build debug apk
        run: ./gradlew assembleStagingDebug --stacktrace
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: urban
          file: app/build/outputs/apk/staging/debug/app-staging-debug.apk
      - name: Set Message
        run: |
          PROPERTY=$(head -n 1 app/version.properties)
          VERSION="${PROPERTY/snuttVersionName=}"
          TITLE="SNUTT Android 빌드 알림"
          MESSAGE="${VERSION} 빌드 완료"
          echo "TITLE=$TITLE" >> $GITHUB_ENV
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: ${{ env.TITLE }}
          SLACK_MESSAGE: ${{ env.MESSAGE }}
          SLACK_USERNAME: BuildNoti